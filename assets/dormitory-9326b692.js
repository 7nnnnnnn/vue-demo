import{i as b,_ as N,d as C,o as U,c as W,a as p,b as o,w as i,F as E,E as u,e as L,f as B,g as D,h as A,j as v,k as z,l as f,m as $,n as q,p as I,q as P}from"./index-74fb4b2e.js";/* empty css                        *//* empty css                 */const T=e=>b.request({url:"api/dormitory/all",data:e}),g=e=>b.request({url:"api/dormitory/delete",params:e}),n=e=>b.request({url:"api/dormitory/add",method:"post",data:e}),F=e=>b.request({url:"api/dormitory/edit",method:"post",data:e}),S=C({data(){return{dormitorys:[],pageinfo:{currentPage:1,pageSize:5,totalpage:10},dormitory:{id:0,comment:"",name:"",leader:0,leftNumber:0,liveNumber:0,maxNumber:0,building:"",school:"",status:0,type:0},DialogVisible:!1,EditDialogVisible:!1}},mounted(){this.getdormitorys()},methods:{tested(){console.log("2#A211".slice(3,6)),console.log(parseInt("2")+1)},getid(e){return e.split("")[2]=="A"?1e3+parseInt(e.slice(3,6)):2e3+parseInt(e.slice(3,6))},dsort(e){for(var l=0;l<e.length;l++)e[l].id=l+1;return e},pageChange(e){this.pageinfo.currentPage=e,this.getdormitorys()},getdormitorys(){let e=this.pageinfo.pageSize*(this.pageinfo.currentPage-1),l=this.pageinfo.currentPage*this.pageinfo.pageSize;T().then(t=>{if(t.success)this.dormitorys=t.data.dormitories.slice(e,l),this.pageinfo.totalpage=t.data.dormitories.length,u(t.msg);else return u(t.msg),!1}).catch(t=>{console.log(t)})},adddormitory(){this.dormitory.comment="宿舍编号第一个数字1代表A面,2代表B面,后面三位代表门牌号",this.dormitory.name="2#",this.dormitory.maxNumber=6,this.dormitory.leftNumber=0,this.dormitory.liveNumber=6,this.dormitory.status=1,this.dormitory.school="泉州信息工程学院",this.dormitory.type=0,this.dormitory.building="2号楼",this.DialogVisible=!0},confirmAdd(){const e=this.dormitory;e.id=this.getid(this.dormitory.name),n(e).then(l=>{this.getdormitorys()}).catch(l=>{console.log(l)}),this.DialogVisible=!1},adds(){let e=this.dormitory;e.comment="宿舍编号第一个数字1代表A面,2代表B面,后面三位代表门牌号",e.maxNumber=6,e.leftNumber=0,e.liveNumber=6,e.status=1,e.school="泉州信息工程学院",e.type=0,e.building="2号楼";for(let l=1;l<=10;l++)for(let t=1;t<=22;t++)switch(l){case 1:t<10?e.name="2#A20"+t:e.name="2#A2"+t,e.id=1200+t,n(e);break;case 2:t<10?e.name="2#B20"+t:e.name="2#B2"+t,e.id=2200+t,n(e);break;case 3:t<10?e.name="2#A30"+t:e.name="2#A3"+t,e.id=1300+t,n(e);break;case 4:t<10?e.name="2#B30"+t:e.name="2#B3"+t,e.id=2300+t,n(e);break;case 5:t<10?e.name="2#A40"+t:e.name="2#A4"+t,e.id=1400+t,n(e);break;case 6:t<10?e.name="2#B40"+t:e.name="2#B4"+t,e.id=2400+t,n(e);break;case 7:t<10?e.name="2#A50"+t:e.name="2#A5"+t,e.id=1500+t,n(e);break;case 8:t<10?e.name="2#B50"+t:e.name="2#B5"+t,e.id=2500+t,n(e);break;case 9:t<10?e.name="2#A60"+t:e.name="2#A6"+t,e.id=1600+t,n(e);break;case 10:t<10?e.name="2#B60"+t:e.name="2#B6"+t,e.id=2600+t,n(e);break}},edit(e){this.EditDialogVisible=!0,this.dormitory=L(e)},confirmEdit(){let e=this.dormitory;console.log(e),F(e).then(l=>{if(l.success)this.EditDialogVisible=!1,this.getdormitorys(),u(l.msg);else return u(l.msg),!1}).catch(l=>{u("网络错误联系管理员")})},del(e){console.log(e);const l={id:e};B.confirm("是否确认删除","Warning",{confirmButtonText:"确认删除",cancelButtonText:"在考虑一下",type:"warning"}).then(()=>{u({type:"success",message:"删除成功"}),g(l).then(t=>{if(t.success)this.getdormitorys();else return console.log(t.msg),!1}).catch(t=>{console.log(t)})}).catch(()=>{u({type:"info",message:"在考虑一下"})})},delall(){for(let e=1;e<=this.pageinfo.totalpage;e++)g({id:e}).then(t=>{if(t.success)this.getdormitorys();else return console.log(t.msg),!1}).catch(t=>{console.log(t)})}}}),j={class:"head"},M={class:"dialog-footer"},O={class:"dialog-footer"};function G(e,l,t,H,J,K){const s=D,m=$,V=A,w=v,d=q,r=I,y=P,h=z;return U(),W(E,null,[p("div",j,[o(s,{link:"",type:"primary",size:"small",onClick:e.adddormitory},{default:i(()=>[f("添加一个宿舍")]),_:1},8,["onClick"]),o(V,{data:e.dormitorys,style:{width:"100%"}},{default:i(()=>[o(m,{fixed:"",prop:"id",label:"宿舍编号",width:"150"}),o(m,{prop:"name",label:"宿舍名",width:"120"}),o(m,{prop:"leader",label:"宿舍长",width:"120"}),o(m,{prop:"maxNumber",label:"总床位数",width:"120"}),o(m,{prop:"leftNumber",label:"空床位数",width:"120"}),o(m,{prop:"liveNumber",label:"入住人数",width:"120"}),o(m,{prop:"status",label:"宿舍入住情况",width:"120"}),o(m,{prop:"comment",label:"备注",width:"120"}),o(m,{prop:"school",label:"学校",width:"120"}),o(m,{prop:"type",label:"宿舍类型",width:"120"}),o(m,{prop:"building",label:"建筑名",width:"120"}),o(m,{fixed:"right",label:"Operations",width:"120"},{default:i(a=>[o(s,{link:"",type:"primary",size:"small",onClick:k=>e.edit(a.row)},{default:i(()=>[f("修改")]),_:2},1032,["onClick"]),o(s,{link:"",type:"primary",size:"small",onClick:k=>e.del(a.row.id)},{default:i(()=>[f("删除")]),_:2},1032,["onClick"])]),_:1})]),_:1},8,["data"]),o(w,{layout:"prev, pager, next",total:e.pageinfo.totalpage,"page-size":e.pageinfo.pageSize,onCurrentChange:e.pageChange},null,8,["total","page-size","onCurrentChange"])]),o(h,{modelValue:e.DialogVisible,"onUpdate:modelValue":l[11]||(l[11]=a=>e.DialogVisible=a),title:"添加宿舍",width:"50%",center:""},{footer:i(()=>[p("span",M,[o(s,{onClick:l[10]||(l[10]=a=>e.DialogVisible=!1)},{default:i(()=>[f("Cancel")]),_:1}),o(s,{type:"primary",onClick:e.confirmAdd},{default:i(()=>[f(" Confirm ")]),_:1},8,["onClick"])])]),default:i(()=>[o(y,{model:e.dormitory},{default:i(()=>[o(r,{label:"宿舍名","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.name,"onUpdate:modelValue":l[0]||(l[0]=a=>e.dormitory.name=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍长","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.leader,"onUpdate:modelValue":l[1]||(l[1]=a=>e.dormitory.leader=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"总床位数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.maxNumber,"onUpdate:modelValue":l[2]||(l[2]=a=>e.dormitory.maxNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"空床位数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.leftNumber,"onUpdate:modelValue":l[3]||(l[3]=a=>e.dormitory.leftNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"入住人数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.liveNumber,"onUpdate:modelValue":l[4]||(l[4]=a=>e.dormitory.liveNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍入住情况","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.status,"onUpdate:modelValue":l[5]||(l[5]=a=>e.dormitory.status=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"备注","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.comment,"onUpdate:modelValue":l[6]||(l[6]=a=>e.dormitory.comment=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"学校","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.school,"onUpdate:modelValue":l[7]||(l[7]=a=>e.dormitory.school=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍类型","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.type,"onUpdate:modelValue":l[8]||(l[8]=a=>e.dormitory.type=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"建筑名","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.building,"onUpdate:modelValue":l[9]||(l[9]=a=>e.dormitory.building=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"])]),_:1},8,["model"])]),_:1},8,["modelValue"]),o(h,{modelValue:e.EditDialogVisible,"onUpdate:modelValue":l[23]||(l[23]=a=>e.EditDialogVisible=a),title:"修改宿舍",width:"50%",center:""},{footer:i(()=>[p("span",O,[o(s,{onClick:l[22]||(l[22]=a=>e.EditDialogVisible=!1)},{default:i(()=>[f("Cancel")]),_:1}),o(s,{type:"primary",onClick:e.confirmEdit},{default:i(()=>[f(" Confirm ")]),_:1},8,["onClick"])])]),default:i(()=>[o(y,{model:e.dormitory},{default:i(()=>[o(r,{label:"宿舍名","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.name,"onUpdate:modelValue":l[12]||(l[12]=a=>e.dormitory.name=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍长","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.leader,"onUpdate:modelValue":l[13]||(l[13]=a=>e.dormitory.leader=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"总床位数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.maxNumber,"onUpdate:modelValue":l[14]||(l[14]=a=>e.dormitory.maxNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"空床位数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.leftNumber,"onUpdate:modelValue":l[15]||(l[15]=a=>e.dormitory.leftNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"入住人数","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.liveNumber,"onUpdate:modelValue":l[16]||(l[16]=a=>e.dormitory.liveNumber=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍入住情况","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.status,"onUpdate:modelValue":l[17]||(l[17]=a=>e.dormitory.status=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"备注","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.comment,"onUpdate:modelValue":l[18]||(l[18]=a=>e.dormitory.comment=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"学校","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.school,"onUpdate:modelValue":l[19]||(l[19]=a=>e.dormitory.school=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"宿舍类型","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.type,"onUpdate:modelValue":l[20]||(l[20]=a=>e.dormitory.type=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),o(r,{label:"建筑名","label-width":e.formLabelWidth},{default:i(()=>[o(d,{modelValue:e.dormitory.building,"onUpdate:modelValue":l[21]||(l[21]=a=>e.dormitory.building=a),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"])]),_:1},8,["model"])]),_:1},8,["modelValue"])],64)}const Y=N(S,[["render",G]]);export{Y as default};
